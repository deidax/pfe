version: '3.5'
services:
  frontend:
    build:
        context: ./vuejs_frontend
        dockerfile: Dockerfile
    restart: always
    container_name: frontend_app
    ports:
      - "8080:8080"
    volumes:
      - ./vuejs_frontend:/usr/src/app/vuejs_frontend
      - /usr/src/app/vuejs_frontend/node_modules

  backend:
    build:
        context: ./DjangoBackend
        dockerfile: Dockerfile
    restart: always
    container_name: django_server
    volumes:
      - ./DjangoBackend:/pfe/backend
      - avito-logs-volume:/pfe/backend/logs
    ports:
      - "8000:8000"
    links:
      - mongodb
    depends_on:
      - "mongodb"
  
  scrapy-service:
    build:
        context: ./avito
        dockerfile: Dockerfile
    restart: always
    container_name: scrapy_server
    volumes:
      - ./avito:/pfe/avito-scrapy-server
      - avito-logs-volume:/pfe/avito-scrapy-server/logs
    ports:
      - "6800:6800"
  
  mongodb:
    image: mongo:latest
    restart: always
    container_name: mongodb_server
    volumes:
      - mongodata:/data/db
    expose:
      - "27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1"]

  mongodb1:
    image: mongo:latest
    restart: always
    container_name: mongodb1_server
    volumes:
      - mongodata1:/data/db
    expose:
      - "27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1"]

  mongodb2:
    image: mongo:latest
    restart: always
    container_name: mongodb2_server
    volumes:
      - mongodata2:/data/db
    expose:
      - "27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1"]    

  mongosetup:
    build:
        context: ./mongo-setup
        dockerfile: Dockerfile
    container_name: "mongosetup"
    depends_on:
        - mongodb
    volumes:
        - mongostatus:/data/

volumes:
  avito-logs-volume:
  mongodata:
  mongodata1:
  mongodata2:
  mongostatus: