{"remainingRequest":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/src/components/CreateCrawler.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/src/components/CreateCrawler.vue","mtime":1631739992128},{"path":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwQWN0aW9ucyxtYXBHZXR0ZXJzfSBmcm9tICJ2dWV4IgogIGV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJDcmVhdGVDcmF3bGVyIiwKICAgIAogICAgcHJvcHM6IHsKICAgICAgb3BlbkNyZWF0ZUZvcm06IEJvb2xlYW4sCiAgICB9LAoKICAgIGRhdGE6ICgpID0+ICh7CiAgICAgIGZvcm06ewogICAgICAgICAgbmFtZTogJycsCiAgICAgICAgICBzdGFydF91cmw6ICcnCiAgICAgIH0sCiAgICB9KSwKCiAgICBjb21wdXRlZDogewogICAgICAuLi5tYXBHZXR0ZXJzKCJDcmF3bGVyIixbImlzTG9hZGluZyJdKSwKICAgIH0sCgogICAgbWV0aG9kczogewogICAgICAuLi5tYXBBY3Rpb25zKCdDcmF3bGVyJyxbJ2NyZWF0ZUNyYXdsZXInXSksCiAgICAgIC4uLm1hcEFjdGlvbnMoJ0NyYXdsZXInLFsnZ2V0QWxsQ3Jhd2xlcnMnXSksCiAgICAgIAogICAgICBjcmVhdGVOZXdDcmF3bGVyKCl7CiAgICAgICAgbGV0IHBsYXlsb2FkID0ge30KICAgICAgICBwbGF5bG9hZFsnZm9ybSddID0gdGhpcy5mb3JtCiAgICAgICAgcGxheWxvYWRbJ3ZtJ10gPSB0aGlzCiAgICAgICAgdGhpcy5jcmVhdGVDcmF3bGVyKHBsYXlsb2FkKS50aGVuKHRoaXMuY2xvc2VEaWFsb2coKSkKICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGUtY3Jhd2xlcnNMaXN0JykKICAgICAgfSwKCiAgICAgIGNsb3NlRGlhbG9nKCl7CiAgICAgICAgbGV0IG9wZW5Gb3JtID0gdGhpcy5vcGVuQ3JlYXRlRm9ybQogICAgICAgIG9wZW5Gb3JtID0gZmFsc2UKICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGUtb3BlbkNyZWF0ZUZvcm0nLCBvcGVuRm9ybSkKICAgIH0sCgogIH0KfQo="},{"version":3,"sources":["CreateCrawler.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"CreateCrawler.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-row justify=\"center\">\n    <v-dialog\n      v-model=\"openCreateForm\"\n      persistent\n      max-width=\"600px\"\n    >\n      <v-card>\n        <v-card-title>\n          <span class=\"text-h5\">Create New Crawler</span>\n        </v-card-title>\n        <v-card-text>\n          <v-form class=\"ccf\" @submit.prevent=\"createNewCrawler\" id=\"create-crawler-form\">\n          <v-container>\n            <v-row>\n              <v-col cols=\"12\">\n                <v-text-field\n                  label=\"Crawler Name*\"\n                  v-model=\"form.name\"\n                  name=\"name\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"12\">\n                <v-text-field\n                  label=\"Crawler Start URL*\"\n                  v-model=\"form.start_url\"\n                  hint=\"This's the Avito url where the crawler will start loading products data from\"\n                  name=\"start_url\"\n                  required\n                ></v-text-field>\n              </v-col>\n            </v-row>\n          </v-container>\n          </v-form>\n          <small>*indicates required field</small>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n           <v-btn\n            color=\"blue darken-1\"\n            text\n            @click=\"closeDialog()\"\n          >\n            Close\n          </v-btn>\n          <v-btn\n            type=\"submit\" \n            :loading=\"isLoading\" \n            form=\"create-crawler-form\"\n            color=\"blue darken-1\"\n            text\n          >\n            <!-- @click=\"closeDialog()\" -->\n            Save\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-row>\n</template>\n<script>\nimport {mapActions,mapGetters} from \"vuex\"\n  export default {\n    name: \"CreateCrawler\",\n    \n    props: {\n      openCreateForm: Boolean,\n    },\n\n    data: () => ({\n      form:{\n          name: '',\n          start_url: ''\n      },\n    }),\n\n    computed: {\n      ...mapGetters(\"Crawler\",[\"isLoading\"]),\n    },\n\n    methods: {\n      ...mapActions('Crawler',['createCrawler']),\n      ...mapActions('Crawler',['getAllCrawlers']),\n      \n      createNewCrawler(){\n        let playload = {}\n        playload['form'] = this.form\n        playload['vm'] = this\n        this.createCrawler(playload).then(this.closeDialog())\n        this.$emit('update-crawlersList')\n      },\n\n      closeDialog(){\n        let openForm = this.openCreateForm\n        openForm = false\n        this.$emit('update-openCreateForm', openForm)\n    },\n\n  }\n}\n</script>"]}]}