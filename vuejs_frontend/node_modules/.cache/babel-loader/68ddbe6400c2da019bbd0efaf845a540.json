{"remainingRequest":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/node_modules/babel-loader/lib/index.js!/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/src/store/modules/auth/actions.js","dependencies":[{"path":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/src/store/modules/auth/actions.js","mtime":1630450446648},{"path":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFVzZXIgZnJvbSAiLi4vLi4vLi4vYXBpcy91c2VyIjsKaW1wb3J0IHJvdXRlciBmcm9tICIuLi8uLi8uLi9yb3V0ZXIvaW5kZXgiOyAvL0xvZ2luCgpleHBvcnQgdmFyIGxvZ2luID0gZnVuY3Rpb24gbG9naW4oX3JlZiwgY3JlZGVudGlhbHMpIHsKICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgY29tbWl0KCdTRVRfTE9BRElORycsIHRydWUpOwogIGNvbW1pdCgnQ0xFQVJfT1RIRVJfRVJST1JTJyk7CiAgVXNlci5sb2dpbihjcmVkZW50aWFscykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgIGNvbnNvbGUubG9nKCJJTiBBVVRIIik7CiAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKCiAgICBpZiAocmVzcG9uc2UuZGF0YS5hdXRoX3Rva2VuKSB7CiAgICAgIGNvbW1pdCgnU0VUX1RPS0VOJywgcmVzcG9uc2UuZGF0YS5hdXRoX3Rva2VuKTsKICAgIH0KCiAgICBVc2VyLmF1dGgoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICBjb21taXQoJ1NFVF9VU0VSREFUQScsIHJlc3BvbnNlLmRhdGEpOwogICAgICBjb21taXQoJ1NFVF9BVVRIRU5USUNBVEVEJywgdHJ1ZSk7CiAgICAgIGNvbW1pdCgnU0VUX0FVVEhfRVJST1JTJywgbnVsbCk7CiAgICAgIGNvbW1pdCgnU0VUX0xPQURJTkcnLCBmYWxzZSk7CiAgICAgIHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiAnZGFzaGJvYXJkJwogICAgICB9KTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICBjb25zb2xlLmxvZygiQXV0aCBjYXRjaCA9PT4iICsgZXJyb3IpOwogICAgICBlcnJvciA9IGVycm9yICsgIi4gQ2FuJ3QgY29ubmVjdCB0byB0aGUgc2VydmVyLiI7CiAgICAgIGNvbW1pdCgnU0VUX09USEVSX0VSUk9SUycsIGVycm9yKTsKICAgICAgY29tbWl0KCdTRVRfVVNFUkRBVEEnLCBudWxsKTsKICAgICAgY29tbWl0KCdTRVRfQVVUSEVOVElDQVRFRCcsIGZhbHNlKTsKICAgICAgY29tbWl0KCdTRVRfTE9BRElORycsIGZhbHNlKTsKICAgIH0pOwogIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgaWYgKGVycm9yLnJlc3BvbnNlICE9IHVuZGVmaW5lZCkgewogICAgICB2YXIgZXJyb3JfZGF0YSA9IGVycm9yLnJlc3BvbnNlLmRhdGE7CiAgICAgIGNvbnNvbGUubG9nKGVycm9yLnJlc3BvbnNlLnN0YXR1cyk7CiAgICAgIGNvbW1pdCgnU0VUX1VTRVJEQVRBJywgbnVsbCk7CiAgICAgIGNvbW1pdCgnU0VUX0FVVEhFTlRJQ0FURUQnLCBmYWxzZSk7CiAgICAgIGNvbW1pdCgnU0VUX0FVVEhfRVJST1JTJywgZXJyb3JfZGF0YS5ub25fZmllbGRfZXJyb3JzKTsKCiAgICAgIGlmIChlcnJvci5yZXNwb25zZS5zdGF0dXMgIT0gNDAwKSB7CiAgICAgICAgdmFyIGVycm9yX21lc3NhZ2UgPSBlcnJvci5yZXNwb25zZS5zdGF0dXMgKyAiICIgKyBlcnJvci5yZXNwb25zZS5zdGF0dXNUZXh0OwogICAgICAgIGNvbW1pdCgnU0VUX09USEVSX0VSUk9SUycsIGVycm9yX21lc3NhZ2UpOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICBlcnJvciA9IGVycm9yICsgIi4gQ2FuJ3QgY29ubmVjdCB0byB0aGUgc2VydmVyLiI7CiAgICAgIGNvbW1pdCgnU0VUX09USEVSX0VSUk9SUycsIGVycm9yKTsKICAgIH0KCiAgICBjb21taXQoJ1NFVF9MT0FESU5HJywgZmFsc2UpOwogIH0pOwp9OyAvL0xvZ291dAoKZXhwb3J0IHZhciBsb2dvdXQgPSBmdW5jdGlvbiBsb2dvdXQoX3JlZjIpIHsKICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogIGNvbW1pdCgnU0VUX0xPR09VVF9MT0FESU5HJywgdHJ1ZSk7CiAgY29tbWl0KCdDTEVBUl9PVEhFUl9FUlJPUlMnKTsKICBVc2VyLmxvZ291dCgpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgY29tbWl0KCdTRVRfTE9HT1VUX0xPQURJTkcnLCBmYWxzZSk7CiAgICBjb21taXQoJ1NFVF9VU0VSREFUQScsIG51bGwpOwogICAgY29tbWl0KCdTRVRfVE9LRU4nLCAnJyk7CiAgICBjb21taXQoJ1NFVF9BVVRIRU5USUNBVEVEJywgZmFsc2UpOwogICAgY29tbWl0KCdTRVRfQVVUSF9FUlJPUlMnLCBudWxsKTsKICAgIHJvdXRlci5wdXNoKHsKICAgICAgbmFtZTogJ2xvZ2luJwogICAgfSk7CiAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICBjb21taXQoJ1NFVF9MT0dPVVRfTE9BRElORycsIGZhbHNlKTsKICAgIGNvbnNvbGUubG9nKCdMT0dPVVQgRXJyID09PicgKyBlcnJvcik7CgogICAgaWYgKGVycm9yLnJlc3BvbnNlICE9IHVuZGVmaW5lZCkgewogICAgICB2YXIgZXJyb3JfbWVzc2FnZSA9IGVycm9yLnJlc3BvbnNlLnN0YXR1cyArICIgIiArIGVycm9yLnJlc3BvbnNlLnN0YXR1c1RleHQgKyAiLiBDYW4ndCBjb25uZWN0IHRvIHRoZSBzZXJ2ZXIuIjsKICAgICAgY29tbWl0KCdTRVRfT1RIRVJfRVJST1JTJywgZXJyb3JfbWVzc2FnZSk7CiAgICB9IGVsc2UgewogICAgICBlcnJvciA9IGVycm9yICsgIi4gQ2FuJ3QgY29ubmVjdCB0byB0aGUgc2VydmVyLiI7CiAgICAgIGNvbW1pdCgnU0VUX09USEVSX0VSUk9SUycsIGVycm9yKTsKICAgIH0KICB9KTsKfTsKZXhwb3J0IHZhciBpc19hdXRoZW50aWNhdGVkID0gZnVuY3Rpb24gaXNfYXV0aGVudGljYXRlZChfcmVmMykgewogIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgY29tbWl0KCdJU19BVVRIRU5USUNBVEVEJyk7Cn07"},{"version":3,"sources":["/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/src/store/modules/auth/actions.js"],"names":["User","router","login","credentials","commit","then","response","console","log","data","auth_token","auth","push","name","catch","error","undefined","error_data","status","non_field_errors","error_message","statusText","logout","is_authenticated"],"mappings":"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","sourcesContent":["import User from \"../../../apis/user\";\r\nimport router from \"../../../router/index\"\r\n\r\n//Login\r\nexport const login = ({ commit }, credentials) => {\r\n\r\n    commit('SET_LOADING',true)\r\n    commit('CLEAR_OTHER_ERRORS')\r\n\r\n    User.login(credentials).then(response => {\r\n        console.log(\"IN AUTH\")\r\n        console.log(response.data)\r\n        if(response.data.auth_token){\r\n            commit('SET_TOKEN', response.data.auth_token)\r\n        }\r\n        User.auth().then(response => {\r\n        commit('SET_USERDATA', response.data);\r\n        commit('SET_AUTHENTICATED',true);\r\n        commit('SET_AUTH_ERRORS',null);\r\n        commit('SET_LOADING',false)\r\n        router.push({ name: 'dashboard' });\r\n        }).catch((error) => {\r\n            console.log(\"Auth catch ==>\"+error)\r\n            error = error+\". Can't connect to the server.\"\r\n            commit('SET_OTHER_ERRORS',error)\r\n            commit('SET_USERDATA', null);\r\n            commit('SET_AUTHENTICATED',false);\r\n            commit('SET_LOADING',false);\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        if(error.response != undefined)\r\n        {\r\n            let error_data = error.response.data\r\n            console.log(error.response.status)\r\n            commit('SET_USERDATA', null);\r\n            commit('SET_AUTHENTICATED',false);\r\n            commit('SET_AUTH_ERRORS',error_data.non_field_errors)\r\n            \r\n            if (error.response.status != 400) {\r\n                let error_message = error.response.status+\" \"+error.response.statusText\r\n                commit('SET_OTHER_ERRORS',error_message)\r\n            }\r\n        }\r\n        else\r\n        {\r\n            error = error+\". Can't connect to the server.\"\r\n            commit('SET_OTHER_ERRORS',error)\r\n        }\r\n        \r\n        \r\n        commit('SET_LOADING',false)\r\n    })\r\n    \r\n}\r\n\r\n//Logout\r\nexport const logout = ({commit}) => {\r\n    commit('SET_LOGOUT_LOADING',true)\r\n    commit('CLEAR_OTHER_ERRORS')\r\n    User.logout().then(() => {\r\n        commit('SET_LOGOUT_LOADING',false)\r\n        commit('SET_USERDATA', null);\r\n        commit('SET_TOKEN', '');\r\n        commit('SET_AUTHENTICATED', false);\r\n        commit('SET_AUTH_ERRORS',null);\r\n        router.push({ name: 'login' });\r\n    })\r\n    .catch((error) => {\r\n        commit('SET_LOGOUT_LOADING',false)\r\n        console.log('LOGOUT Err ==>' + error)\r\n        if(error.response != undefined)\r\n        {\r\n            let error_message = error.response.status+\" \"+error.response.statusText+\". Can't connect to the server.\"\r\n            commit('SET_OTHER_ERRORS',error_message)\r\n        }\r\n        else\r\n        {\r\n            error = error+\". Can't connect to the server.\"\r\n            commit('SET_OTHER_ERRORS',error)\r\n        }\r\n    })\r\n}\r\n\r\nexport const is_authenticated = ({commit}) => {\r\n    commit('IS_AUTHENTICATED')\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]}]}