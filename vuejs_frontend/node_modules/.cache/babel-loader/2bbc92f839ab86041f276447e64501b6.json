{"remainingRequest":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/node_modules/babel-loader/lib/index.js!/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/src/components/CrawlerDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/src/components/CrawlerDetails.vue","mtime":1631972902641},{"path":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/khalil/Projects/PFE/scrapy_app/vuejs_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUva2hhbGlsL1Byb2plY3RzL1BGRS9zY3JhcHlfYXBwL3Z1ZWpzX2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgdGV4dGFyZWEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29uc29sZWxvZ3MnKTsKdGV4dGFyZWEuc2Nyb2xsVG9wID0gdGV4dGFyZWEuc2Nyb2xsSGVpZ2h0OwppbXBvcnQgeyBtYXBBY3Rpb25zLCBtYXBHZXR0ZXJzIH0gZnJvbSAidnVleCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ3Jhd2xlckRldGFpbHMnLAogIHByb3BzOiB7CiAgICBvcGVuRGlhbG9nOiBCb29sZWFuLAogICAgcGVyY2VudGFnZTogMCwKICAgIGpvYlN0YXRlOiAnJywKICAgIGFjdGl2ZUNyYXdsZXJEZXRhaWxzOiB7fSwKICAgIGNyYXdsZXJ0aW1lQ291bnRlcjogJycKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBub3RpZmljYXRpb25zOiBmYWxzZSwKICAgICAgc291bmQ6IHRydWUsCiAgICAgIHdpZGdldHM6IGZhbHNlLAogICAgICBvcGVuRGlhbG9nU3dpdGNoOiBmYWxzZQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBvcGVuRGlhbG9nOiBmdW5jdGlvbiBvcGVuRGlhbG9nKG9sZFZhbCwgbmV3VmFsKSB7CiAgICAgIGNvbnNvbGUubG9nKCJPTEQgVkFMOiIgKyBvbGRWYWwpOwogICAgICBjb25zb2xlLmxvZygiTkVXIFZBTDoiICsgbmV3VmFsKTsKICAgICAgdGhpcy5yZWFkQ3Jhd2xlckxvZ0ZpbGUoKTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKCJDcmF3bGVyIiwgWyJnZXRDcmF3bGVyTG9nZmlsZSJdKSksCiAgbWV0aG9kczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBBY3Rpb25zKCdDcmF3bGVyJywgWydnZXRMb2dmaWxlJ10pKSwge30sIHsKICAgIGNsb3NlRGlhbG9nOiBmdW5jdGlvbiBjbG9zZURpYWxvZygpIHsKICAgICAgdmFyIG9wZW5EaWFsb2dTd2l0Y2ggPSB0aGlzLm9wZW5EaWFsb2c7CiAgICAgIG9wZW5EaWFsb2dTd2l0Y2ggPSBmYWxzZTsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlLW9wZW5EaWFsb2cnLCBvcGVuRGlhbG9nU3dpdGNoKTsKICAgIH0sCiAgICBjcmF3bGVyTG9nZmlsZTogZnVuY3Rpb24gY3Jhd2xlckxvZ2ZpbGUoKSB7CiAgICAgIHZhciBmb3JtID0ge307CiAgICAgIGZvcm1bJ3Rhc2tfaWQnXSA9IHRoaXMuYWN0aXZlQ3Jhd2xlckRldGFpbHMudGFza19pZC50b1N0cmluZygpOwogICAgICB0aGlzLmdldExvZ2ZpbGUoZm9ybSk7CiAgICB9LAogICAgcmVhZENyYXdsZXJMb2dGaWxlOiBmdW5jdGlvbiByZWFkQ3Jhd2xlckxvZ0ZpbGUoc3RhcnRSZWFkaW5nTG9ncykgewogICAgICB2YXIgcmVhZExvZyA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICBjb25zb2xlLmxvZygiUkVBRElORyBMT0cgRklMRSIpOwogICAgICAgIHRoaXMuY3Jhd2xlckxvZ2ZpbGUoKTsgLy8gRGlzcGxheSB0aGUgbWVzc2FnZSB3aGVuIGNvdW50ZG93biBpcyBvdmVyCgogICAgICAgIGNvbnNvbGUubG9nKCJSZWFkaW5nIGxvZ3MiKTsKCiAgICAgICAgaWYgKHRoaXMuam9iU3RhdGUgPT0gJ2ZpbmlzaGVkJyB8fCAhdGhpcy5vcGVuRGlhbG9nKSB7CiAgICAgICAgICBjbGVhckludGVydmFsKHJlYWRMb2cpOwogICAgICAgICAgY29uc29sZS5sb2coIkxvZyBmaWxlIGZpbmlzaGVkIik7CiAgICAgICAgfQogICAgICB9LmJpbmQodGhpcyksIDEwMDApOwogICAgfQogIH0pCn07"},{"version":3,"sources":["CrawlerDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyJA,IAAA,QAAA,GAAA,QAAA,CAAA,cAAA,CAAA,aAAA,CAAA;AACA,QAAA,CAAA,SAAA,GAAA,QAAA,CAAA,YAAA;AACA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA,OADA;AAEA,IAAA,UAAA,EAAA,CAFA;AAGA,IAAA,QAAA,EAAA,EAHA;AAIA,IAAA,oBAAA,EAAA,EAJA;AAKA,IAAA,kBAAA,EAAA;AALA,GAFA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,KADA;AAEA,MAAA,KAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA,KAHA;AAKA,MAAA,gBAAA,EAAA;AALA,KAAA;AAOA,GAlBA;AAoBA,EAAA,KAAA,EAAA;AACA,IAAA,UADA,sBACA,MADA,EACA,MADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,aAAA,MAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,aAAA,MAAA;AACA,WAAA,kBAAA;AACA;AALA,GApBA;AA4BA,EAAA,QAAA,oBACA,UAAA,CAAA,SAAA,EAAA,CAAA,mBAAA,CAAA,CADA,CA5BA;AAgCA,EAAA,OAAA,kCACA,UAAA,CAAA,SAAA,EAAA,CAAA,YAAA,CAAA,CADA;AAGA,IAAA,WAHA,yBAGA;AACA,UAAA,gBAAA,GAAA,KAAA,UAAA;AACA,MAAA,gBAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,mBAAA,EAAA,gBAAA;AACA,KAPA;AASA,IAAA,cATA,4BASA;AACA,UAAA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,CAAA,SAAA,CAAA,GAAA,KAAA,oBAAA,CAAA,OAAA,CAAA,QAAA,EAAA;AACA,WAAA,UAAA,CAAA,IAAA;AACA,KAbA;AAeA,IAAA,kBAfA,8BAeA,gBAfA,EAeA;AAEA,UAAA,OAAA,GAAA,WAAA,CAAA,YAAA;AAEA,QAAA,OAAA,CAAA,GAAA,CAAA,kBAAA;AACA,aAAA,cAAA,GAHA,CAKA;;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,cAAA;;AACA,YAAA,KAAA,QAAA,IAAA,UAAA,IAAA,CAAA,KAAA,UAAA,EAAA;AACA,UAAA,aAAA,CAAA,OAAA,CAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,mBAAA;AACA;AACA,OAXA,CAYA,IAZA,CAYA,IAZA,CAAA,EAYA,IAZA,CAAA;AAaA;AA9BA;AAhCA,CAAA","sourcesContent":["<template>\n  <v-row justify=\"center\">\n    <v-dialog\n      v-model=\"openDialog\"\n      fullscreen\n      hide-overlay\n      transition=\"dialog-bottom-transition\"\n    >\n      <v-card>\n        <v-toolbar\n          dark\n          color=\"primary\"\n        >\n          <v-btn\n            icon\n            dark\n            @click=\"closeDialog()\"\n          >\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n          <v-toolbar-title>Settings {{openDialogSwitch}}</v-toolbar-title>\n          <v-spacer></v-spacer>\n          <!-- <v-toolbar-items>\n            <v-btn\n              dark\n              text\n              @click=\"closeDialog\"\n            >\n              Save\n            </v-btn>\n          </v-toolbar-items> -->\n        </v-toolbar>\n        <v-list\n          three-line\n          subheader\n        >\n          <!-- <v-subheader>Loading Products Data From Avito</v-subheader> -->\n          <v-list-item>\n            <v-list-item-content>\n            <v-list-item-title v-if=\"activeCrawlerDetails.number_of_products_found != 0 && jobState != 'finished'\"><i>Loading Products Data From Avito</i></v-list-item-title>\n              <v-list-item-title v-if=\"activeCrawlerDetails.number_of_products_found != 0 && jobState != 'finished'\">\n                <v-progress-linear\n                  v-model=\"percentage\"\n                  striped\n                  color=\"light-blue\"\n                  height=\"20\"\n                >\n                  <strong>{{ isNaN(percentage) ? 'Loading...' : percentage+'%'}}</strong>\n                </v-progress-linear>\n              </v-list-item-title>\n              <v-list-item-title v-if=\"activeCrawlerDetails.number_of_products_found == 0 && jobState != 'finished'\">\n                <v-progress-linear\n                  indeterminate\n                  color=\"cyan\"\n                ></v-progress-linear>\n              </v-list-item-title>\n              <v-list-item-title v-if=\"jobState == 'finished'\">\n                <v-alert type=\"success\" v-if=\"(activeCrawlerDetails.products_inserted  + 1) == activeCrawlerDetails.number_of_products_found && activeCrawlerDetails.number_of_products_found != 0\">\n                  <h1>Done !</h1>\n                  <h2>{{activeCrawlerDetails.products_inserted  + 1}} / {{activeCrawlerDetails.number_of_products_found}} Products inserted in DB</h2>\n                </v-alert>\n                <v-alert type=\"info\" v-if=\"(activeCrawlerDetails.products_inserted  + 1) != activeCrawlerDetails.number_of_products_found && activeCrawlerDetails.number_of_products_found != 0\">\n                  <h1>Info !</h1>\n                  <h2>{{activeCrawlerDetails.products_inserted  + 1}} / {{activeCrawlerDetails.number_of_products_found}} Products inserted in DB</h2>\n                </v-alert>\n                <v-alert type=\"info\" v-if=\"activeCrawlerDetails.number_of_products_found == 0\">\n                  <h1>Done !</h1>\n                  <h2>{{activeCrawlerDetails.products_inserted  + 1}} Products inserted in DB</h2>\n                </v-alert>\n              </v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n          <v-list-item>\n            <v-list-item-content v-if=\"jobState != 'finished'\">\n              <div class=\"text-center\" v-if=\"activeCrawlerDetails.number_of_products_found != 0\">\n                <v-chip\n                  class=\"ma-2\"\n                  color=\"success\"\n                  outlined\n                  large\n                >\n                  <v-icon left>\n                    mdi-radar\n                  </v-icon>\n                  <b style=\"margin-right: 5px\">{{ activeCrawlerDetails.number_of_products_found }}</b> products found \n                </v-chip>\n\n\n                <v-chip\n                  class=\"ma-2\"\n                  color=\"deep-purple accent-4\"\n                  outlined\n                  large\n                >\n                  <v-icon left>\n                    mdi-alarm\n                  </v-icon>\n                  Estimated time to finish \n                  <b v-if=\"crawlertimeCounter == ''\">...</b>\n                  <b style=\"margin-left: 3px\" v-else>{{ crawlertimeCounter }}</b>\n                </v-chip>\n\n              </div>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n        <v-divider></v-divider>\n        <v-list\n          three-line\n          subheader\n        >\n          <v-subheader>Logs</v-subheader>\n          <v-list-item>\n            <v-textarea\n              filled\n              readonly\n              rows=\"15\"\n              id=\"consolelogs\"\n              label=\"~avito-analyzer-server/crawlerlogs$\"\n              :value=\"getCrawlerLogfile\"\n            ></v-textarea>\n            <!-- <v-list-item-action>\n              <v-checkbox v-model=\"notifications\"></v-checkbox>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>Notifications</v-list-item-title>\n              <v-list-item-subtitle>Notify me about updates to apps or games that I downloaded</v-list-item-subtitle>\n            </v-list-item-content>\n          </v-list-item>\n          <v-list-item>\n            <v-list-item-action>\n              <v-checkbox v-model=\"sound\"></v-checkbox>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>Sound</v-list-item-title>\n              <v-list-item-subtitle>Auto-update apps at any time. Data charges may apply</v-list-item-subtitle>\n            </v-list-item-content>\n          </v-list-item>\n          <v-list-item>\n            <v-list-item-action>\n              <v-checkbox v-model=\"widgets\"></v-checkbox>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>Auto-add widgets</v-list-item-title>\n              <v-list-item-subtitle>Automatically add home screen widgets</v-list-item-subtitle>\n            </v-list-item-content> -->\n          </v-list-item>\n        </v-list>\n      </v-card>\n    </v-dialog>\n  </v-row>\n</template>\n<script>\nvar textarea = document.getElementById('consolelogs');\ntextarea.scrollTop = textarea.scrollHeight;\nimport {mapActions, mapGetters} from \"vuex\"\n  export default {\n    name: 'CrawlerDetails',\n    props:{\n        openDialog: Boolean,\n        percentage: 0,\n        jobState: '',\n        activeCrawlerDetails: {},\n        crawlertimeCounter: ''\n        \n    },\n    data () {\n      return {\n        notifications: false,\n        sound: true,\n        widgets: false,\n\n        openDialogSwitch: false,\n      }\n    },\n    \n    watch:{\n      openDialog(oldVal, newVal){\n        console.log(\"OLD VAL:\"+oldVal)\n        console.log(\"NEW VAL:\"+newVal)\n        this.readCrawlerLogFile()\n      }\n    },\n\n    computed: {\n      ...mapGetters(\"Crawler\",[\"getCrawlerLogfile\"]),\n    },\n\n    methods: {\n      ...mapActions('Crawler',['getLogfile']),\n\n      closeDialog(){\n        let openDialogSwitch = this.openDialog\n        openDialogSwitch = false\n        this.$emit('update-openDialog', openDialogSwitch)\n      },\n\n      crawlerLogfile(){\n        let form = {}\n        form ['task_id'] = (this.activeCrawlerDetails.task_id).toString()\n        this.getLogfile(form)\n      },\n\n      readCrawlerLogFile(startReadingLogs){\n\n        let readLog = setInterval(function() {\n        \n        console.log(\"READING LOG FILE\")\n        this.crawlerLogfile()\n        \n        // Display the message when countdown is over\n        console.log(\"Reading logs\")\n        if (this.jobState == 'finished' || !this.openDialog) {\n          clearInterval(readLog);\n              console.log(\"Log file finished\")\n          }\n        }\n        .bind(this), 1000);\n      }\n\n\n    },\n    \n\n  }\n</script>\n<style scoped>\n\n</style>"],"sourceRoot":"src/components"}]}